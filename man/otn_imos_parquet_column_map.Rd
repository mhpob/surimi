% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/otn_imos_parquet_column_map.R
\name{otn_imos_parquet_column_map}
\alias{otn_imos_parquet_column_map}
\title{Map OTN-formatted data from our new Parquet detection extracts  to IMOS-format}
\usage{
otn_imos_parquet_column_map(
  det_dataframe,
  rcvr_dataframe = NULL,
  tag_dataframe = NULL,
  derive = TRUE,
  coll_code = NULL,
  tagname_column = "tagName"
)
}
\arguments{
\item{det_dataframe}{The dataframe containing detection information.}

\item{rcvr_dataframe}{The dataframe containing receiver information.}

\item{tag_dataframe}{The dataframe containing tag information.}

\item{derive}{An optional flag that allows the user to pass in fewer than all three files. If given, the code will use the detection
extract dataframe to generate dataframes for either or both of the receiver and tag dataframes, if they are not passed in. Although
this will result in missing information, it does let the user supply only a detection extract file, which is a situation some may
find themselves in.}

\item{coll_code}{The user-supplied collectioncode, which we'll use to populate the receiver_project_name and tagging_project_name
columns in the receiver and tag metadata files respectively. We don't have a good way to associate the relevant info from the det
extract to the appropriate columns in the rcvr/tag metadata, but those datasets are restricted to one collectioncode each, so
we can just take it from the user at the time they run the code.}

\item{tagname_column}{The name of the column that's equivalent to 'tagname', if the tagname column isn't present. Should only be
necessary if deriving.}
}
\value{
Returns a list containing three approximately IMOS-formatted dataframes.
}
\description{
Takes three dataframes in the OTN format- one for a detection extract, one for receiver deployment metadata, and one for tag metadata-
and rearranges, renames, and creates columns until they can pass for IMOS-format dataframes. This allows us to pass the data directly
into Remora without making substantial changes to how that code runs or what it looks for. This is functionally identical to otn_imos_column_map() except that the
column names on the OTN side reflect that the detection dataframe came from our new parquet format rather than our old CSV format.
}
